.chatContainer {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  background: transparent;
  position: relative;
}

.inputForm {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  width: 100%;
  max-width: 48rem;
  margin: 1rem auto;
  padding: 0.75rem;
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 1rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
}

.input {
  flex-grow: 1;
  padding: 0.75rem;
  border-radius: 0.5rem;
  border: none;
  font-size: 1rem;
  background-color: transparent;
  color: var(--neutral-800);
  resize: none;
  min-height: 24px;
  max-height: 200px;
  transition: all 0.2s ease;
}

.input:focus {
  outline: none;
}

.input::placeholder {
  color: var(--neutral-400);
}

.button {
  padding: 0.5rem;
  background: var(--reva-500);
  color: white;
  border: none;
  border-radius: 0.5rem;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
}

.button svg {
  color: rgb(66, 8, 200);
  width: 18px;
  height: 18px;
  transition: transform 0.2s ease;
}

.button:hover:not(:disabled) {
  background: var(--reva-600);
  transform: translateY(-1px);
}

.button:hover:not(:disabled) svg {
  transform: translateX(1px);
}

.button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  background: var(--neutral-300);
}

.button:disabled svg {
  color: var(--neutral-500);
}

.messages {
  flex-grow: 1;
  overflow-y: auto;
  padding: 2rem 1rem 7rem 1rem;
  scroll-behavior: smooth;
  width: 100%;
}

.messageWrapper {
  display: flex;
  padding: 1.5rem;
  transition: background-color 0.2s ease;
}

.messageWrapper:hover {
  background-color: rgba(0, 0, 0, 0.02);
}

:global(.dark) .messageWrapper:hover {
  background-color: rgba(255, 255, 255, 0.02);
}

.messageContent {
  display: flex;
  gap: 1rem;
  width: 100%;
  max-width: 48rem;
  margin: 0 auto;
}

.avatar {
  width: 36px;
  height: 36px;
  border-radius: 0.5rem;
  flex-shrink: 0;
  color: rgb(79, 4, 183);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
  position: relative;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  transition: all 0.2s ease;
}

.userAvatar {
  background: linear-gradient(135deg, var(--reva-400), var(--reva-600));
}

.assistantAvatar {
  background: linear-gradient(135deg, var(--reva-500), var(--reva-700));
}

.avatar svg {
  width: 20px;
  height: 20px;
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
}

.avatar:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

/* Dark mode adjustments */
:global(.dark) .userAvatar {
  background: linear-gradient(135deg, var(--reva-500), var(--reva-700));
}

:global(.dark) .assistantAvatar {
  background: linear-gradient(135deg, var(--reva-400), var(--reva-600));
}

.messageBody {
  flex-grow: 1;
  overflow-x: hidden;
}

.userMessage,
.assistantMessage {
  font-size: 1rem;
  line-height: 1.6;
}

/* Markdown Styles */
.markdown {
  color: var(--neutral-800);
}

.markdown h1.heading1 {
  font-size: 1.75rem;
  font-weight: 600;
  margin: 1.5rem 0 1rem;
  color: var(--reva-800);
}

.markdown h2.heading2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 1.25rem 0 0.75rem;
  color: var(--reva-700);
}

.markdown h3.heading3 {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 1rem 0 0.5rem;
  color: var(--reva-600);
}

.markdown p.paragraph {
  margin: 0.75rem 0;
  line-height: 1.6;
  color: var(--neutral-800);
}

.markdown ul.list,
.markdown ol.orderedList {
  margin: 0.75rem 0;
  padding-left: 1.5rem;
}

.markdown li.listItem {
  margin: 0.375rem 0;
  position: relative;
}

.markdown ul.list li.listItem::before {
  content: "â€¢";
  position: absolute;
  left: -1rem;
  color: var(--reva-500);
}

.markdown ol.orderedList {
  counter-reset: item;
}

.markdown ol.orderedList li.listItem {
  counter-increment: item;
}

.markdown ol.orderedList li.listItem::before {
  content: counter(item) ".";
  position: absolute;
  left: -1.5rem;
  color: var(--reva-500);
}

.markdown code.inlineCode {
  background: var(--neutral-100);
  padding: 0.2em 0.4em;
  border-radius: 0.25rem;
  font-size: 0.875em;
  font-family: "JetBrains Mono", monospace;
  color: var(--reva-600);
}

.markdown .codeBlock {
  background: var(--neutral-900);
  padding: 1rem;
  border-radius: 0.5rem;
  overflow-x: auto;
  margin: 1rem 0;
  border: 1px solid var(--neutral-800);
}

.markdown .codeBlock pre {
  margin: 0;
}

.markdown .codeBlock code {
  color: var(--neutral-100);
  font-family: "JetBrains Mono", monospace;
  font-size: 0.875em;
  line-height: 1.6;
}

.markdown a.link {
  color: var(--reva-500);
  text-decoration: underline;
  text-underline-offset: 2px;
  transition: all 0.2s ease;
}

.markdown a.link:hover {
  color: var(--reva-600);
}

.markdown blockquote.blockquote {
  border-left: 4px solid var(--reva-200);
  padding-left: 1rem;
  margin: 1rem 0;
  color: var(--neutral-600);
  font-style: italic;
  background: var(--neutral-50);
  padding: 1rem;
  border-radius: 0 0.5rem 0.5rem 0;
}

/* Dark mode styles */
:global(.dark) .markdown {
  color: var(--neutral-200);
}

:global(.dark) .markdown h1.heading1,
:global(.dark) .markdown h2.heading2,
:global(.dark) .markdown h3.heading3 {
  color: var(--neutral-100);
}

:global(.dark) .markdown p.paragraph {
  color: var(--neutral-300);
}

:global(.dark) .markdown code.inlineCode {
  background: var(--neutral-800);
  color: var(--reva-400);
}

:global(.dark) .markdown .codeBlock {
  background: var(--neutral-950);
  border-color: var(--neutral-800);
}

:global(.dark) .markdown .codeBlock code {
  color: var(--neutral-100);
}

:global(.dark) .markdown blockquote.blockquote {
  background: var(--neutral-900);
  border-color: var(--reva-600);
  color: var(--neutral-400);
}

:global(.dark) .inputForm {
  background: rgba(23, 23, 23, 0.9);
  border-color: var(--neutral-800);
}

:global(.dark) .input {
  color: var(--neutral-100);
}

:global(.dark) .input::placeholder {
  color: var(--neutral-500);
}

:global(.dark) .button {
  background: var(--reva-500);
}

:global(.dark) .button:hover:not(:disabled) {
  background: var(--reva-600);
}

:global(.dark) .button:disabled {
  background: var(--neutral-700);
}

:global(.dark) .button:disabled svg {
  color: var(--neutral-400);
}
